DROP DATABASE IF EXISTS healthyBilly;

CREATE DATABASE healthyBilly;

DROP TABLE IF EXISTS recipes, ingredients, billyjoinme, products;

CREATE TABLE recipes (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  recipe_name VARCHAR(200) NOT NULL,
  vegetarian BOOLEAN DEFAULT false,
  vegan BOOLEAN DEFAULT false,
  glutenFree BOOLEAN DEFAULT false,
  dairyFree BOOLEAN DEFAULT false,
  paleo BOOLEAN DEFAULT false,
  keto BOOLEAN DEFAULT false,
  pescatarian BOOLEAN DEFAULT false,
  picture_url VARCHAR(2048) NOT NULL
);

CREATE TABLE ingredients (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  ingredient_name VARCHAR(50) NOT NULL,
  picture_url VARCHAR(2048) NOT NULL
);

CREATE TABLE billyjoinme (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  recipe_id INT,
  ingredient_id INT,

  FOREIGN KEY(recipe_id)
    REFERENCES recipes(id),

  FOREIGN KEY(ingredient_id)
    REFERENCES ingredients(id)
);

CREATE TABLE products (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  product_name VARCHAR(100) NOT NULL,
  picture_url VARCHAR(2048) NOT NULL
);

SELECT SETVAL(pg_get_serial_sequence('recipes', 'id'), (SELECT max(id) FROM recipes));
SELECT SETVAL(pg_get_serial_sequence('ingredients', 'id'), (SELECT max(id) FROM ingredients));
SELECT SETVAL(pg_get_serial_sequence('billyjoinme', 'id'), (SELECT max(id) FROM billyjoinme));

